name: 'pr-test'
on: [pull_request]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install sqlite3 lib (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          $url = 'https://www.sqlite.org/download.html'
          $html = Invoke-WebRequest -Uri $url
          $versionHref = ($html.Links | Where-Object { $_ -like '*sqlite-dll-win-*' } | Select-Object -First 1).outerHTML
          $versionMatch = [regex]::Matches($versionHref, "-\d.+")[0].Value
          $SQLiteVersion = [regex]::Matches($versionMatch, "\d+")[0].Value
          $Year = (Get-Date).Year
          $DLL_URL = "https://www.sqlite.org/$Year/sqlite-dll-win64-x64-$SQLiteVersion.zip"
          $SOURCE_URL = "https://www.sqlite.org/$Year/sqlite-amalgamation-$SQLiteVersion.zip"
          Invoke-WebRequest -Uri $SOURCE_URL -OutFile ".\sqlite-source.zip"
          Invoke-WebRequest -Uri $DLL_URL -OutFile ".\sqlite-bin.zip"
          Expand-Archive -Path ".\sqlite-source.zip" -DestinationPath ".\sqlite-lib"
          Expand-Archive -Path ".\sqlite-bin.zip" -DestinationPath ".\sqlite-lib"
          cd ".\sqlite-lib"
          lib /DEF:sqlite3.def /OUT:sqlite3.lib /MACHINE:x64
          $userProfile = $env:USERPROFILE
          $sourceFilePath = ".\sqlite3.lib"
          $destinationDirectory = "$userProfile\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib\rustlib\x86_64-pc-windows-msvc\lib"
          Copy-Item -Path $sourceFilePath -Destination $destinationDirectory
          cd ..
      - name: install frontend dependencies
        run: yarn install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
